
package com.andela.andela;

import com.andela.andela.ProductCursor.Factory;
import io.objectbox.EntityInfo;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.internal.IdGetter;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * Properties for entity "Product". Can be used for QueryBuilder and for referencing DB names.
 */
public final class Product_ implements EntityInfo<Product> {

    // Leading underscores for static constants to avoid naming conflicts with property names

    public static final String __ENTITY_NAME = "Product";

    public static final int __ENTITY_ID = 1;

    public static final Class<Product> __ENTITY_CLASS = Product.class;

    public static final String __DB_NAME = "Product";

    public static final CursorFactory<Product> __CURSOR_FACTORY = new Factory();

    @Internal
    static final ProductIdGetter __ID_GETTER = new ProductIdGetter();

    public final static Product_ __INSTANCE = new Product_();

    public final static io.objectbox.Property<Product> id =
        new io.objectbox.Property<>(__INSTANCE, 0, 1, long.class, "id", true, "id");

    public final static io.objectbox.Property<Product> imageUri =
        new io.objectbox.Property<>(__INSTANCE, 1, 2, String.class, "imageUri");

    public final static io.objectbox.Property<Product> image =
        new io.objectbox.Property<>(__INSTANCE, 2, 3, String.class, "image");

    @SuppressWarnings("unchecked")
    public final static io.objectbox.Property<Product>[] __ALL_PROPERTIES = new io.objectbox.Property[]{
        id,
        imageUri,
        image
    };

    public final static io.objectbox.Property<Product> __ID_PROPERTY = id;

    @Override
    public String getEntityName() {
        return __ENTITY_NAME;
    }

    @Override
    public int getEntityId() {
        return __ENTITY_ID;
    }

    @Override
    public Class<Product> getEntityClass() {
        return __ENTITY_CLASS;
    }

    @Override
    public String getDbName() {
        return __DB_NAME;
    }

    @Override
    public io.objectbox.Property<Product>[] getAllProperties() {
        return __ALL_PROPERTIES;
    }

    @Override
    public io.objectbox.Property<Product> getIdProperty() {
        return __ID_PROPERTY;
    }

    @Override
    public IdGetter<Product> getIdGetter() {
        return __ID_GETTER;
    }

    @Override
    public CursorFactory<Product> getCursorFactory() {
        return __CURSOR_FACTORY;
    }

    @Internal
    static final class ProductIdGetter implements IdGetter<Product> {
        @Override
        public long getId(Product object) {
            return object.id;
        }
    }

}
